---
source: ch5/src/lib.rs
expression: prog
---
extern rt_print_bool, rt_print_newline, rt_print_str_const, rt_read_int
section .rodata
    const_1 dq 1
            db `x`
    const_2 dq 1
            db `Y`
    const_3 dq 3
            db `abc`
    const_4 dq 3
            db `def`
section .text

    global _start
_start:
    push rbp
    mov rbp, rsp
    sub rsp, 8
    push rbx
    push r12
    push r13
    mov rdx, 1
    mov rsi, 2

.block3:
    mov rdi, rsi
    neg rdi
    cmp rdx, rdi
    jl .block6
    add rdx, 1
    cmp rdx, rsi
    je .block1
    lea rcx, [rel const_2]

.block0:
    lea r13, [rel const_3]
    mov r12, 1
    xor r12, 1
    lea rbx, [rel const_4]
    mov rdi, rcx
    call rt_print_str_const
    mov rdi, r13
    call rt_print_str_const
    mov rdi, r12
    call rt_print_bool
    mov rdi, rbx
    call rt_print_str_const
    call rt_print_newline
    call rt_read_int
    mov rbx, rax
    add rbx, 1
    sub rbx, 4
    pop r13
    pop r12
    pop rbx
    mov rsp, rbp
    pop rbp
    mov rax, 60
    mov rdi, 0
    syscall

.block1:
    lea rcx, [rel const_1]
    jmp .block0

.block6:
    add rdx, rsi
    cmp rdx, 10
    jg .block4
    mov rsi, rdx
    jmp .block3

.block4:
    mov rsi, rdx
    sub rsi, 1
    jmp .block3

