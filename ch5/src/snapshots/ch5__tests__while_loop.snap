---
source: ch5/src/lib.rs
expression: prog
---
extern rt_read_int, rt_print_int, rt_print_str, rt_print_bool
extern rt_print_newline, rt_initialize, rt_allocate, rt_new_string
extern rt_rootstack_begin
section .rodata
    const_1 dq 1
            db `x`
    const_2 dq 1
            db `Y`
    const_3 dq 3
            db `abc`
    const_4 dq 3
            db `def`
section .text

    global _start
_start:
    push rbp
    mov rbp, rsp
    sub rsp, 8
    push rbx
    push r12
    push r13
    mov rbx, 1
    mov rcx, 2

block3:
    mov rdx, rcx
    neg rdx
    cmp rbx, rdx
    jl block6
    add rbx, 1
    cmp rbx, rcx
    je block1
    mov rcx, const_2

block0:
    mov r13, const_3
    mov r12, 1
    xor r12, 1
    mov rbx, const_4
    mov rdi, rcx
    call rt_print_str
    mov rdi, r13
    call rt_print_str
    mov rdi, r12
    call rt_print_bool
    mov rdi, rbx
    call rt_print_str
    call rt_print_newline
    call rt_read_int
    mov rbx, rax
    add rbx, 1
    sub rbx, 4
    pop r13
    pop r12
    pop rbx
    mov rsp, rbp
    pop rbp
    mov rax, 60
    mov rdi, 0
    syscall

block1:
    mov rcx, const_1
    jmp block0

block6:
    add rbx, rcx
    cmp rbx, 10
    jg block4
    mov rcx, rbx
    jmp block3

block4:
    mov rcx, rbx
    sub rcx, 1
    jmp block3

