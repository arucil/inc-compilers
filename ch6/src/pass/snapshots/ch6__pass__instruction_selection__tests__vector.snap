---
source: ch6/src/pass/instruction_selection.rs
expression: result.to_string_pretty()
---
locals: {y.1: Tuple([Int, Bool, Void, Tuple([Void]), Str]), (tmp).1: Tuple([Void]), (tmp).2: Str, (tmp).3: Bool, (tmp).4: Bool, (tmp).5: Int, (tmp).6: Tuple([Void])}

constants: {"const_1": "abc"}

start:
    mov rdi, 1
    mov rsi, 0
    mov rdx, r15
    call rt_allocate
    mov r11, rax
    mov (tmp).1, r11
    mov rdi, 3
    shl rdi, 3
    or rdi, 3
    mov rsi, 8
    mov rdx, r15
    call rt_allocate
    mov rdi, rax
    add rdi, 8
    mov rsi, const_1
    mov rdx, 3
    call rt_memcpy
    sub rax, 8
    mov (tmp).2, rax
    mov rdi, 6177
    mov rsi, 32
    mov rdx, r15
    call rt_allocate
    mov r11, rax
    mov qword [r11 + 8], 1
    mov qword [r11 + 16], 0
    mov qword [r11 + 24], (tmp).1
    mov qword [r11 + 32], (tmp).2
    mov y.1, r11
    mov r11, y.1
    mov (tmp).3, qword [r11 + 16]
    mov (tmp).4, (tmp).3
    xor (tmp).4, 1
    mov r11, y.1
    mov qword [r11 + 16], (tmp).4
    mov (tmp).5, 5
    mov r11, y.1
    mov qword [r11 + 8], (tmp).5
    mov r11, y.1
    mov (tmp).6, qword [r11 + 24]
    jmp conclusion

