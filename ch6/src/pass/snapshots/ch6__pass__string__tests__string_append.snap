---
source: ch6/src/pass/string.rs
expression: result.to_string_pretty()
---
(let
 [x "\n"]
 (print
  (let
   [(append-tmp-1) "abc"]
   (let
    [(append-tmp-2)
     (let
      [(append-tmp-1) "+"]
      (let
       [(append-tmp-2) x]
       (let
        [(append-len-1)
         (string-length (append-tmp-1))]
        (let
         [(append-tmp-3)
          (alloc-string
           (+
            (append-len-1)
            (string-length (append-tmp-2))))]
         (begin
          (copy-string!
           (append-tmp-3)
           0
           (append-tmp-1))
          (copy-string!
           (append-tmp-3)
           (append-len-1)
           (append-tmp-2))
          (append-tmp-3))))))]
    (let
     [(append-len-1)
      (string-length (append-tmp-1))]
     (let
      [(append-tmp-3)
       (alloc-string
        (+
         (append-len-1)
         (string-length (append-tmp-2))))]
      (begin
       (copy-string!
        (append-tmp-3)
        0
        (append-tmp-1))
       (copy-string!
        (append-tmp-3)
        (append-len-1)
        (append-tmp-2))
       (append-tmp-3))))))))
