---
source: ch6/src/pass/array_bounds.rs
expression: result.to_string_pretty()
---
(let
 [x.0
  (if (>= 3 0)
   (make-vector 3 #t)
   (length-error 3))]
 (let
  [i.1 1]
  (let
   [y.2
    (if
     (if (>= i.1 0)
      (< i.1 (vector-length x.0))
      #f)
     (vector-ref x.0 i.1)
     (out-of-bounds-error
      i.1
      (vector-length x.0)))]
   (let
    [z.3 (vector 1 #t "abc")]
    (begin
     (if
      (if (>= i.1 0)
       (< i.1 (vector-length x.0))
       #f)
      (vector-set! x.0 i.1 (vector-ref z.3 1))
      (out-of-bounds-error
       i.1
       (vector-length x.0)))
     (vector-set! z.3 1 (not y.2)))))))
