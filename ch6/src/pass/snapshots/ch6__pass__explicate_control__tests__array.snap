---
source: ch6/src/pass/explicate_control.rs
expression: result.to_string_pretty()
---
locals: {x.1: Array(Bool), (bounds-tmp-index).0: Int, y.3: Array(Int), (bounds-tmp-index).2: Int, z.5: Array(Array(Bool)), (bounds-tmp-index).4: Int, t.7: Array(Void), (bounds-tmp-index).6: Int, (bounds-tmp-vec).9: Array(Bool), (bounds-tmp-index).10: Int, tmp.0: Int, tmp.1: Int, (bounds-tmp-vec).11: Array(Void), (bounds-tmp-index).12: Int, tmp.2: Int, tmp.3: Int, (bounds-tmp-vec).13: Array(Void), (bounds-tmp-index).16: Int, (bounds-tmp-vec).14: Array(Int), (bounds-tmp-index).15: Int, tmp.4: Int, tmp.5: Int, tmp.6: Int, tmp.7: Int, tmp.8: Int}

start:
    (bounds-tmp-index).0 = 3
    if (>= (bounds-tmp-index).0 0) goto block24 else goto block25
block24:
    x.1 = (make-vector (bounds-tmp-index).0 #t : Bool)
    goto block23
block25:
    length-error (bounds-tmp-index).0
block23:
    (bounds-tmp-index).2 = 0
    if (>= (bounds-tmp-index).2 0) goto block21 else goto block22
block21:
    y.3 = (make-vector (bounds-tmp-index).2 2 : Int)
    goto block20
block22:
    length-error (bounds-tmp-index).2
block20:
    (bounds-tmp-index).4 = 2
    if (>= (bounds-tmp-index).4 0) goto block18 else goto block19
block18:
    z.5 = (make-vector (bounds-tmp-index).4 x.1 : Array(Bool))
    goto block17
block19:
    length-error (bounds-tmp-index).4
block17:
    (bounds-tmp-index).6 = 10
    if (>= (bounds-tmp-index).6 0) goto block15 else goto block16
block15:
    t.7 = (make-vector (bounds-tmp-index).6 #<void> : Void)
    goto block14
block16:
    length-error (bounds-tmp-index).6
block14:
    (bounds-tmp-vec).9 = x.1
    (bounds-tmp-index).10 = 1
    if (>= (bounds-tmp-index).10 0) goto block13 else goto block12
block13:
    tmp.0 = (vector-length (bounds-tmp-vec).9)
    if (< (bounds-tmp-index).10 tmp.0) goto block11 else goto block12
block12:
    tmp.1 = (vector-length (bounds-tmp-vec).9)
    out-of-bounds-error (bounds-tmp-index).10 tmp.1
block11:
    vector-set! (bounds-tmp-vec).9 (bounds-tmp-index).10 #f
    goto block10
block10:
    (bounds-tmp-vec).11 = t.7
    (bounds-tmp-index).12 = 3
    if (>= (bounds-tmp-index).12 0) goto block9 else goto block8
block9:
    tmp.2 = (vector-length (bounds-tmp-vec).11)
    if (< (bounds-tmp-index).12 tmp.2) goto block7 else goto block8
block8:
    tmp.3 = (vector-length (bounds-tmp-vec).11)
    out-of-bounds-error (bounds-tmp-index).12 tmp.3
block7:
    (bounds-tmp-vec).13 = t.7
    (bounds-tmp-vec).14 = y.3
    (bounds-tmp-index).15 = 0
    if (>= (bounds-tmp-index).15 0) goto block6 else goto block5
block6:
    tmp.4 = (vector-length (bounds-tmp-vec).14)
    if (< (bounds-tmp-index).15 tmp.4) goto block4 else goto block5
block5:
    tmp.5 = (vector-length (bounds-tmp-vec).14)
    out-of-bounds-error (bounds-tmp-index).15 tmp.5
block4:
    (bounds-tmp-index).16 = (vector-ref (bounds-tmp-vec).14 (bounds-tmp-index).15)
    goto block3
block3:
    if (>= (bounds-tmp-index).16 0) goto block2 else goto block1
block2:
    tmp.6 = (vector-length (bounds-tmp-vec).13)
    if (< (bounds-tmp-index).16 tmp.6) goto block0 else goto block1
block1:
    tmp.7 = (vector-length (bounds-tmp-vec).13)
    out-of-bounds-error (bounds-tmp-index).16 tmp.7
block0:
    tmp.8 = (vector-length t.7)
    print-int tmp.8
    newline
    return #<void>

