---
source: ch3/src/lib.rs
expression: prog

---
extern read_int, print_int, print_newline
section .text

start:
    call read_int
    mov rdx, rax
    mov rbx, 5
    mov rdi, rdx
    neg rdi
    mov rcx, 7
    mov rsi, rdx
    add rsi, rdi
    mov r8, rsi
    add r8, rbx
    mov qword [rbp - 24], -12
    mov qword [rbp - 16], -50
    mov qword [rbp - 8], 1
    mov r15, 0
    mov r14, 21
    mov r13, 77
    mov r12, 13
    mov r11, 13
    mov r10, 47
    mov r9, 1758
    mov rsi, 1000
    mov rdx, rdx
    neg rdx
    mov rdi, rdi
    add rdi, rcx
    mov rcx, r10
    add rcx, r9
    mov r9, r11
    add r9, rcx
    mov rcx, r12
    add rcx, r9
    mov r9, r13
    add r9, rcx
    mov rcx, r14
    add rcx, r9
    mov r9, r15
    add r9, rcx
    mov rcx, qword [rbp - 8]
    add rcx, r9
    mov r9, qword [rbp - 16]
    add r9, rcx
    mov rcx, qword [rbp - 24]
    add rcx, r9
    mov rcx, rcx
    add rcx, rsi
    mov rsi, r8
    add rsi, rcx
    mov rcx, rdi
    add rcx, rsi
    mov rbx, rbx
    add rbx, rcx
    mov rax, rdx
    add rax, rbx
    jmp conclusion

    global _start
_start:
    push rbp
    mov rbp, rsp
    sub rsp, 24
    push rbx
    push r12
    push r13
    push r14
    push r15
    jmp start

conclusion:
    pop r15
    pop r14
    pop r13
    pop r12
    pop rbx
    mov rsp, rbp
    pop rbp
    call print_int
    call print_newline
    mov rax, 60
    mov rdi, 0
    syscall

